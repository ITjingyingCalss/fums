<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fums.follow_up_rule_setting.dao.PointOfTimeDAO">
  <resultMap id="BaseResultMap" type="com.fums.follow_up_rule_setting.pojo.PointOfTime">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="benchmart_events_id" jdbcType="INTEGER" property="benchmartEventsId" />
    <result column="filter_events_id" jdbcType="INTEGER" property="filterEventsId" />
    <result column="start_year" jdbcType="INTEGER" property="startYear" />
    <result column="start_month" jdbcType="INTEGER" property="startMonth" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="days_ahead" jdbcType="INTEGER" property="daysAhead" />
    <result column="start_day" jdbcType="INTEGER" property="startDay" />
    <result column="interval_year" jdbcType="INTEGER" property="intervalYear" />
    <result column="interval_month" jdbcType="INTEGER" property="intervalMonth" />
    <result column="interval_day" jdbcType="INTEGER" property="intervalDay" />
  </resultMap>
  <sql id="Base_Column_List">
    id, benchmart_events_id, filter_events_id, start_year, start_month, duration, days_ahead, 
    start_day, interval_year, interval_month, interval_day
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from point_of_time
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from point_of_time
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fums.follow_up_rule_setting.pojo.PointOfTime">
    insert into point_of_time (id, benchmart_events_id, filter_events_id, 
      start_year, start_month, duration, 
      days_ahead, start_day, interval_year, 
      interval_month, interval_day)
    values (#{id,jdbcType=INTEGER}, #{benchmartEventsId,jdbcType=INTEGER}, #{filterEventsId,jdbcType=INTEGER}, 
      #{startYear,jdbcType=INTEGER}, #{startMonth,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER}, 
      #{daysAhead,jdbcType=INTEGER}, #{startDay,jdbcType=INTEGER}, #{intervalYear,jdbcType=INTEGER}, 
      #{intervalMonth,jdbcType=INTEGER}, #{intervalDay,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fums.follow_up_rule_setting.pojo.PointOfTime">
    insert into point_of_time
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="benchmartEventsId != null">
        benchmart_events_id,
      </if>
      <if test="filterEventsId != null">
        filter_events_id,
      </if>
      <if test="startYear != null">
        start_year,
      </if>
      <if test="startMonth != null">
        start_month,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="daysAhead != null">
        days_ahead,
      </if>
      <if test="startDay != null">
        start_day,
      </if>
      <if test="intervalYear != null">
        interval_year,
      </if>
      <if test="intervalMonth != null">
        interval_month,
      </if>
      <if test="intervalDay != null">
        interval_day,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="benchmartEventsId != null">
        #{benchmartEventsId,jdbcType=INTEGER},
      </if>
      <if test="filterEventsId != null">
        #{filterEventsId,jdbcType=INTEGER},
      </if>
      <if test="startYear != null">
        #{startYear,jdbcType=INTEGER},
      </if>
      <if test="startMonth != null">
        #{startMonth,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="daysAhead != null">
        #{daysAhead,jdbcType=INTEGER},
      </if>
      <if test="startDay != null">
        #{startDay,jdbcType=INTEGER},
      </if>
      <if test="intervalYear != null">
        #{intervalYear,jdbcType=INTEGER},
      </if>
      <if test="intervalMonth != null">
        #{intervalMonth,jdbcType=INTEGER},
      </if>
      <if test="intervalDay != null">
        #{intervalDay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fums.follow_up_rule_setting.pojo.PointOfTime">
    update point_of_time
    <set>
      <if test="benchmartEventsId != null">
        benchmart_events_id = #{benchmartEventsId,jdbcType=INTEGER},
      </if>
      <if test="filterEventsId != null">
        filter_events_id = #{filterEventsId,jdbcType=INTEGER},
      </if>
      <if test="startYear != null">
        start_year = #{startYear,jdbcType=INTEGER},
      </if>
      <if test="startMonth != null">
        start_month = #{startMonth,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="daysAhead != null">
        days_ahead = #{daysAhead,jdbcType=INTEGER},
      </if>
      <if test="startDay != null">
        start_day = #{startDay,jdbcType=INTEGER},
      </if>
      <if test="intervalYear != null">
        interval_year = #{intervalYear,jdbcType=INTEGER},
      </if>
      <if test="intervalMonth != null">
        interval_month = #{intervalMonth,jdbcType=INTEGER},
      </if>
      <if test="intervalDay != null">
        interval_day = #{intervalDay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fums.follow_up_rule_setting.pojo.PointOfTime">
    update point_of_time
    set benchmart_events_id = #{benchmartEventsId,jdbcType=INTEGER},
      filter_events_id = #{filterEventsId,jdbcType=INTEGER},
      start_year = #{startYear,jdbcType=INTEGER},
      start_month = #{startMonth,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      days_ahead = #{daysAhead,jdbcType=INTEGER},
      start_day = #{startDay,jdbcType=INTEGER},
      interval_year = #{intervalYear,jdbcType=INTEGER},
      interval_month = #{intervalMonth,jdbcType=INTEGER},
      interval_day = #{intervalDay,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>